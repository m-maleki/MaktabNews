// <auto-generated />
using System;
using MaktabNews.Infrastructure.EfCore.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaktabNews.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240315203904_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "سیاسی"
                        },
                        new
                        {
                            Id = 2,
                            Title = "بین المللی"
                        },
                        new
                        {
                            Id = 3,
                            Title = "اجتماعی"
                        },
                        new
                        {
                            Id = 4,
                            Title = "فرهنگی"
                        },
                        new
                        {
                            Id = 5,
                            Title = "ورزشی"
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ReporterId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ReporterId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateAt = new DateTime(2024, 3, 16, 0, 9, 3, 940, DateTimeKind.Local).AddTicks(7686),
                            Description = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد\r\n\r\nلورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد",
                            ImageAddress = "~/assets/img/blog/2.jpg",
                            IsActive = true,
                            ReporterId = 2,
                            ShortDescription = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد\r\n\r\n",
                            Title = "اگر روزی اردن پترا را ببینید چه رازهایی در مورد آن خواهید دانست؟",
                            VisitCount = 150
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "سفر"
                        },
                        new
                        {
                            Id = 2,
                            Title = "طبیعت"
                        },
                        new
                        {
                            Id = 3,
                            Title = "آموزش"
                        },
                        new
                        {
                            Id = 4,
                            Title = "جنگل"
                        },
                        new
                        {
                            Id = 5,
                            Title = "دریا"
                        },
                        new
                        {
                            Id = 6,
                            Title = "مد و فشن"
                        },
                        new
                        {
                            Id = 7,
                            Title = "سلامتی"
                        },
                        new
                        {
                            Id = 8,
                            Title = "غذا"
                        },
                        new
                        {
                            Id = 9,
                            Title = "صبحانه"
                        },
                        new
                        {
                            Id = 10,
                            Title = "شام"
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("NewsTag", b =>
                {
                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("NewsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("NewsTag");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Admin", b =>
                {
                    b.HasBaseType("MaktabNew.Domain.Core.Entities.User");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Maleki.jm@gmail.com",
                            FullName = "مسعود ملکی",
                            ImageAddress = "~/assets/img/user/1.jpg",
                            Password = "1qaz!QAZ",
                            UserRole = 1
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Reporter", b =>
                {
                    b.HasBaseType("MaktabNew.Domain.Core.Entities.User");

                    b.HasDiscriminator().HasValue("Reporter");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "Ali.Mohammadi@Gmail.com",
                            FullName = "علی محمدی",
                            ImageAddress = "~/assets/img/author/1.jpg",
                            Password = "1qaz!QAZ",
                            UserRole = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "Sahar.Ramezani@gmail.com",
                            FullName = "سحر رمضانی",
                            ImageAddress = "~/assets/img/author/2.jpg",
                            Password = "1qaz!QAZ",
                            UserRole = 2
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Visitor", b =>
                {
                    b.HasBaseType("MaktabNew.Domain.Core.Entities.User");

                    b.HasDiscriminator().HasValue("Visitor");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Email = "Ali.Mohammadi@Gmail.com",
                            FullName = "علی محمدی",
                            ImageAddress = "~/assets/img/user/2.jpg",
                            Password = "1qaz!QAZ",
                            UserRole = 3
                        });
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Comment", b =>
                {
                    b.HasOne("MaktabNew.Domain.Core.Entities.News", null)
                        .WithMany("Comments")
                        .HasForeignKey("NewsId");

                    b.HasOne("MaktabNew.Domain.Core.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.News", b =>
                {
                    b.HasOne("MaktabNew.Domain.Core.Entities.Category", "Category")
                        .WithMany("NewsList")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaktabNew.Domain.Core.Entities.Reporter", "Reporter")
                        .WithMany("NewsList")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("NewsTag", b =>
                {
                    b.HasOne("MaktabNew.Domain.Core.Entities.News", null)
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaktabNew.Domain.Core.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Category", b =>
                {
                    b.Navigation("NewsList");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.User", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("MaktabNew.Domain.Core.Entities.Reporter", b =>
                {
                    b.Navigation("NewsList");
                });
#pragma warning restore 612, 618
        }
    }
}
